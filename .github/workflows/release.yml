# .github/workflows/release.yml

name: Release CI

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

permissions:
  contents: write

jobs:
  build-and-release:
    name: Build and Release
    strategy:
      matrix:
        include:
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            asset_name: smartedu_downloader-windows-x64.exe
          - target: x86_64-apple-darwin
            os: macos-latest
            asset_name: smartedu_downloader-macos-x64
          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
            asset_name: smartedu_downloader-linux-x64

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install musl-tools for Linux static build
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get update && sudo apt-get install -y musl-tools

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Configure musl linker
        if: matrix.os == 'ubuntu-latest'
        run: |
          mkdir -p .cargo
          echo '[target.x86_64-unknown-linux-musl]' >> .cargo/config.toml
          echo 'linker = "x86_64-linux-musl-gcc"' >> .cargo/config.toml
      
      - name: Build binary
        run: cargo build --release --target ${{ matrix.target }}

      - name: Prepare artifact
        shell: bash
        run: |
          ARTIFACT_DIR="artifacts"
          mkdir -p $ARTIFACT_DIR
          SOURCE_PATH=$(find target/${{ matrix.target }}/release -maxdepth 1 -type f -executable -name "smartedu_downloader*")
          mv "$SOURCE_PATH" "$ARTIFACT_DIR/${{ matrix.asset_name }}"

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/*
          generate_release_notes: true