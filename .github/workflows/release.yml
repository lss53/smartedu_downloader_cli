name: Release CI

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
      - 'v[0-9]+.[0-9]+.[0-9]+-*'
  workflow_dispatch:

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  create-release:
    name: Prepare Release
    runs-on: ubuntu-24.04
    permissions:
      contents: write
    outputs:
      binary_name: ${{ steps.extract_vars.outputs.binary_name }}
      version: ${{ steps.extract_vars.outputs.version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Extract Release Variables
        id: extract_vars
        run: |
          # 从 Cargo.toml 动态获取名称
          BINARY_NAME=$(grep '^name =' Cargo.toml | head -1 | sed 's/name = "\(.*\)"/\1/')
          echo "binary_name=$BINARY_NAME" >> $GITHUB_OUTPUT

          # 统一提取版本号
          VERSION=$(echo "${{ github.ref_name }}" | sed 's/^v//')
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Create Draft Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          name: Release ${{ github.ref_name }}
          draft: true
          generate_release_notes: true

  build:
    name: Build Artifact (${{ matrix.target }})
    needs: create-release
    strategy:
      fail-fast: false
      matrix:
        include:
          # 在 Matrix 中定义 strip 命令
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            os_name: Windows
            arch: x64
            ext: .zip
            strip_cmd: ""
          - target: x86_64-apple-darwin
            os: macos-latest
            os_name: macOS
            arch: x64
            ext: .tar.gz
            strip_cmd: strip
          - target: x86_64-unknown-linux-musl
            os: ubuntu-24.04
            os_name: Linux
            arch: x64
            ext: .tar.gz
            strip_cmd: strip
          - target: aarch64-apple-darwin
            os: macos-latest
            os_name: macOS
            arch: arm64
            ext: .tar.gz
            strip_cmd: strip
          - target: aarch64-unknown-linux-musl
            os: ubuntu-24.04
            os_name: Linux
            arch: arm64
            ext: .tar.gz
            strip_cmd: aarch64-linux-gnu-strip
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Cache Rust dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index
            ~/.cargo/registry/cache
            ~/.cargo/git/db
            target/
          key: ${{ runner.os }}-cargo-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
      - name: Install cross-compilation tool (cross)
        if: matrix.target == 'aarch64-unknown-linux-musl'
        run: cargo install cross --force
      - name: Install build dependencies (Linux)
        if: runner.os == 'Linux'
        run: sudo apt-get update && sudo apt-get install -y musl-tools binutils-aarch64-linux-gnu
      - name: Build and Test
        shell: bash
        run: |
          # 使用变量切换构建命令
          BUILD_CMD="cargo"
          if [[ "${{ matrix.target }}" == "aarch64-unknown-linux-musl" ]]; then
            BUILD_CMD="cross"
          fi
          $BUILD_CMD test --release --target ${{ matrix.target }} --locked
          $BUILD_CMD build --release --target ${{ matrix.target }} --locked
      - name: Package artifact
        id: package
        shell: bash
        run: |
          BINARY_NAME="${{ needs.create-release.outputs.binary_name }}"
          VERSION="${{ needs.create-release.outputs.version }}"
          SOURCE_NAME=$( if [[ "${{ matrix.os }}" == "windows-latest" ]]; then echo "$BINARY_NAME.exe"; else echo "$BINARY_NAME"; fi )
          SOURCE_PATH="target/${{ matrix.target }}/release/$SOURCE_NAME"
          
          if [[ -n "${{ matrix.strip_cmd }}" ]]; then
            echo "Stripping binary with: ${{ matrix.strip_cmd }}"
            ${{ matrix.strip_cmd }} "$SOURCE_PATH"
          fi
          
          DEST_ARCHIVE_NAME="${BINARY_NAME}_${VERSION}_${{ matrix.os_name }}_${{ matrix.arch }}${{ matrix.ext }}"
          
          if [[ "${{ matrix.ext }}" == ".zip" ]]; then
            tar -acf "$DEST_ARCHIVE_NAME" -C "$(dirname "$SOURCE_PATH")" "$SOURCE_NAME"
          else
            tar -czf "$DEST_ARCHIVE_NAME" -C "$(dirname "$SOURCE_PATH")" "$SOURCE_NAME"
          fi
          echo "archive_name=$DEST_ARCHIVE_NAME" >> $GITHUB_OUTPUT
      - name: Upload artifact for release
        uses: actions/upload-artifact@v4
        with:
          name: release-asset-${{ matrix.target }}
          path: ${{ steps.package.outputs.archive_name }}

  upload-assets:
      name: Upload Assets and Checksum
      needs: [create-release, build]
      runs-on: ubuntu-24.04
      permissions:
        contents: write
      steps:
        - name: Download all release assets
          uses: actions/download-artifact@v4
          with:
            path: release-assets
            pattern: release-asset-*
            merge-multiple: true
        - name: Generate checksums file
          run: |
            cd release-assets
            CHECKSUMS_FILE="${{ needs.create-release.outputs.binary_name }}_${{ needs.create-release.outputs.version }}_checksums.txt"
            sha256sum * > ../${CHECKSUMS_FILE}
            echo "Generated ${CHECKSUMS_FILE}:"
            cat ../${CHECKSUMS_FILE}
        - name: Upload all assets and checksums to Release
          uses: softprops/action-gh-release@v2
          with:
            files: |
              release-assets/*
              ${{ needs.create-release.outputs.binary_name }}_${{ needs.create-release.outputs.version }}_checksums.txt

  publish-release:
    name: Publish Release
    needs: [create-release, upload-assets]
    runs-on: ubuntu-24.04
    permissions:
      contents: write
    steps:
      - name: Publish the Release
        uses: softprops/action-gh-release@v2
        with:
          draft: false